<!DOCTYPE html>
<html lang="zh-Hant">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>發票彙總工具｜離線·批量·B2C/B2B</title>
<meta name="theme-color" content="#0a84ff"/>

<!-- 可離線：內嵌樣式（不依賴 CDN），iOS 風格卡片＋表格 -->
<style>
  :root{
    --bg:#f7f7f7; --card:#ffffff; --text:#111; --muted:#666;
    --primary:#0a84ff; --ok:#34c759; --warn:#ff9f0a; --err:#ff3b30; --border:#e6e6e6;
    --shadow: 0 8px 24px rgba(0,0,0,.06);
  }
  [data-theme="dark"]{
    --bg:#121417; --card:#181c21; --text:#e8eef4; --muted:#94a3b8;
    --primary:#66aaff; --ok:#31c48d; --warn:#ffb020; --err:#ff5a6a; --border:#242b34;
    --shadow: 0 8px 24px rgba(0,0,0,.35);
  }
  *{box-sizing:border-box}
  body{margin:0;background:var(--bg);color:var(--text);font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial}
  h1,h2,h3{margin:0 0 .5rem}
  .app{max-width:1200px;margin:0 auto;padding:16px}
  .topbar{display:flex;gap:12px;align-items:center;margin-bottom:16px}
  .title{font-size:24px;font-weight:700}
  .subtitle{color:var(--muted);font-size:14px}
  .pill{padding:4px 10px;border:1px solid var(--border);border-radius:999px;color:var(--muted);font-size:12px}
  .nav{display:grid;grid-template-columns:repeat(auto-fit,minmax(120px,1fr));gap:8px;margin:12px 0 16px}
  .nav button{border:1px solid var(--border);background:var(--card);border-radius:12px;padding:10px;cursor:pointer;box-shadow:var(--shadow);text-align:left}
  .nav button.active{outline:2px solid var(--primary)}
  .wrap{display:grid;grid-template-columns:240px 1fr;gap:16px}
  @media (max-width:900px){.wrap{grid-template-columns:1fr}}
  .side{position:sticky;top:12px;height:max-content;border:1px solid var(--border);background:var(--card);border-radius:16px;box-shadow:var(--shadow);padding:12px}
  .side h3{font-size:14px;color:var(--muted);margin-bottom:6px}
  .side .snav{display:flex;flex-direction:column;gap:6px}
  .side .snav button{border:1px solid var(--border);background:var(--card);border-radius:10px;padding:8px;cursor:pointer;text-align:left}
  .side .snav button.active{background:rgba(10,132,255,.08);border-color:var(--primary)}
  .card{border:1px solid var(--border);background:var(--card);border-radius:16px;box-shadow:var(--shadow);padding:16px}
  .row{display:flex;gap:12px;flex-wrap:wrap}
  .btn{border:1px solid var(--border);background:var(--card);border-radius:10px;padding:8px 12px;cursor:pointer}
  .btn.primary{background:var(--primary);color:#fff;border-color:var(--primary)}
  .btn.ok{background:var(--ok);color:#fff;border-color:var(--ok)}
  .btn.warn{background:var(--warn);color:#fff;border-color:var(--warn)}
  .btn.err{background:var(--err);color:#fff;border-color:var(--err)}
  .btn.ghost{background:transparent}
  .input, select, textarea{width:100%;padding:10px;border:1px solid var(--border);background:var(--card);color:var(--text);border-radius:10px}
  .grid2{display:grid;grid-template-columns:1fr 1fr;gap:12px}
  .grid3{display:grid;grid-template-columns:repeat(3,1fr);gap:12px}
  .grid4{display:grid;grid-template-columns:repeat(4,1fr);gap:12px}
  @media (max-width:900px){.grid2,.grid3,.grid4{grid-template-columns:1fr}}
  table{width:100%;border-collapse:separate;border-spacing:0;border:1px solid var(--border);border-radius:12px;overflow:hidden}
  thead th{position:sticky;top:0;background:var(--card);text-align:left;border-bottom:1px solid var(--border);padding:10px;font-size:12px;color:var(--muted)}
  tbody td{border-bottom:1px solid var(--border);padding:10px;font-size:14px;vertical-align:top}
  tbody tr:hover{background:rgba(0,0,0,.03)}
  .right{text-align:right}
  .muted{color:var(--muted)}
  .badge{display:inline-block;padding:3px 8px;border-radius:999px;font-size:12px;border:1px solid var(--border)}
  .badge.ok{background:rgba(52,199,89,.12);border-color:rgba(52,199,89,.4)}
  .badge.err{background:rgba(255,59,48,.12);border-color:rgba(255,59,48,.4)}
  .badge.warn{background:rgba(255,159,10,.12);border-color:rgba(255,159,10,.4)}
  .skeleton{background:linear-gradient(90deg, rgba(0,0,0,.06), rgba(0,0,0,.12), rgba(0,0,0,.06));height:12px;border-radius:6px;animation:sk 1.4s infinite}
  @keyframes sk{0%{background-position:-200px 0}100%{background-position:200px 0}}
  .footer{margin-top:20px;color:var(--muted);font-size:12px}
  .hr{height:1px;background:var(--border);margin:12px 0}
</style>
</head>

<body data-theme="light">
<div class="app" id="app">
  <div class="topbar">
    <div style="width:28px;height:28px;border-radius:8px;background:var(--primary)"></div>
    <div>
      <div class="title">發票彙總工具</div>
      <div class="subtitle">離線 · 批量 · B2C/B2B</div>
    </div>
    <div style="margin-left:auto" class="row">
      <button class="btn" id="themeToggle" aria-label="切換主題">切換主題</button>
      <span class="pill" id="offlineBadge">離線可用</span>
    </div>
  </div>

  <!-- 頂部主導覽（對應 4.1~4.10） -->
  <div class="nav" id="topNav" role="tablist" aria-label="主要導覽">
    <button data-view="index" class="active" role="tab">主頁</button>
    <button data-view="upload" role="tab">批量上傳</button>
    <button data-view="mapping" role="tab">欄位映射</button>
    <button data-view="settings" role="tab">設定</button>
    <button data-view="results" role="tab">批量結果</button>
    <button data-view="fileDetail" role="tab">單檔詳情</button>
    <button data-view="anomalies" role="tab">異常清單</button>
    <button data-view="history" role="tab">歷史紀錄</button>
    <button data-view="export" role="tab">匯出中心</button>
    <button data-view="help" role="tab">幫助</button>
  </div>

  <div class="wrap">
    <!-- 側邊子導覽（就地切分大區塊） -->
    <aside class="side" aria-label="子導覽">
      <h3>快速區塊</h3>
      <div class="snav" id="subNav">
        <button data-view="index" class="active">總覽</button>
        <button data-view="upload">上傳</button>
        <button data-view="mapping">映射</button>
        <button data-view="settings">設定</button>
        <button data-view="results">結果</button>
        <button data-view="fileDetail">單檔</button>
        <button data-view="anomalies">異常</button>
        <button data-view="history">歷史</button>
        <button data-view="export">匯出</button>
        <button data-view="help">幫助</button>
      </div>
      <div class="hr"></div>
      <div class="muted" style="font-size:12px">
        當前設定摘要：
        <div id="settingsSummary" class="muted"></div>
      </div>
    </aside>

    <!-- 主要內容：所有 4.1~4.10 以 section 呈現、用 JS 切換 -->
    <main id="views" style="display:grid;gap:16px">
      <!-- 4.1 index -->
      <section id="view-index" class="card" aria-labelledby="h-index">
        <h2 id="h-index">主頁</h2>
        <p class="muted">開始於「批量上傳」，或先設定稅率與精度。</p>
        <div class="grid4">
          <div class="card">
            <h3>批量上傳</h3>
            <p class="muted">選擇或拖拽 CSV（MVP）；完成後前往「批量結果」。</p>
            <button class="btn primary" data-view-jump="upload">前往上傳</button>
          </div>
          <div class="card">
            <h3>欄位映射</h3>
            <p class="muted">將原始表頭對應至：統編／應稅銷售額／營業稅／總計。</p>
            <button class="btn" data-view-jump="mapping">開啟映射</button>
          </div>
          <div class="card">
            <h3>設定</h3>
            <p class="muted">稅率、精度、空值策略與主題；內建小算盤驗算 B2C。</p>
            <button class="btn" data-view-jump="settings">調整設定</button>
          </div>
          <div class="card">
            <h3>批量結果</h3>
            <p class="muted">查看各檔合計與本批總表，並可導出。</p>
            <button class="btn" data-view-jump="results">查看結果</button>
          </div>
        </div>
      </section>

      <!-- 4.2 upload -->
      <section id="view-upload" class="card" aria-labelledby="h-upload" hidden>
        <h2 id="h-upload">批量上傳</h2>
        <div class="row">
          <input id="fileInput" type="file" accept=".csv" multiple class="input" aria-label="選擇CSV檔" />
          <button class="btn primary" id="btnParse">開始解析</button>
          <button class="btn" id="btnClearQueue">清空列表</button>
        </div>
        <p class="muted" style="margin-top:6px">MVP 先支援 CSV（UTF-8，有表頭）；.xlsx 可於後續加入。</p>
        <div id="uploadQueue" class="card" style="margin-top:12px">
          <h3>待處理清單</h3>
          <table aria-label="上傳清單">
            <thead><tr>
              <th>檔名</th><th>大小</th><th>狀態</th><th class="right">操作</th>
            </tr></thead>
            <tbody id="queueBody"></tbody>
          </table>
        </div>
        <div id="progressArea" class="muted" style="margin-top:8px"></div>
      </section>

      <!-- 4.3 mapping -->
      <section id="view-mapping" class="card" aria-labelledby="h-mapping" hidden>
        <h2 id="h-mapping">欄位映射</h2>
        <p class="muted">為本批檔案設定欄位對應。缺失時將無法開始計算。</p>
        <div class="grid2">
          <div class="card">
            <h3>標準欄位</h3>
            <div class="grid2">
              <div>
                <label>買方統一編號</label>
                <select id="map-taxid" class="input"></select>
              </div>
              <div>
                <label>應稅銷售額</label>
                <select id="map-sales" class="input"></select>
              </div>
              <div>
                <label>營業稅</label>
                <select id="map-tax" class="input"></select>
              </div>
              <div>
                <label>總計</label>
                <select id="map-total" class="input"></select>
              </div>
            </div>
            <div class="row" style="margin-top:10px">
              <button class="btn primary" id="btnSaveMapping">保存映射模板</button>
              <button class="btn" id="btnApplyMapping">套用至本批所有檔</button>
            </div>
          </div>
          <div class="card">
            <h3>自動偵測</h3>
            <p class="muted">已根據表頭嘗試匹配；可人工覆寫。</p>
            <div id="detectedHeaders" class="muted"></div>
          </div>
        </div>
      </section>

      <!-- 4.4 settings -->
      <section id="view-settings" class="card" aria-labelledby="h-settings" hidden>
        <h2 id="h-settings">設定</h2>
        <div class="grid3">
          <div>
            <label>稅率（%）</label>
            <input id="set-rate" class="input" type="number" step="0.01" value="5"/>
          </div>
          <div>
            <label>精度</label>
            <select id="set-precision" class="input">
              <option value="0">整數元</option>
              <option value="2">兩位小數</option>
            </select>
          </div>
          <div>
            <label>空值策略</label>
            <select id="set-empty" class="input">
              <option value="skip">跳過</option>
              <option value="zero">視為 0 並記異常</option>
            </select>
          </div>
        </div>
        <div class="card" style="margin-top:12px">
          <h3>B2C 小算盤（驗算）</h3>
          <div class="grid3">
            <div><label>含稅金額</label><input id="calc-gross" class="input" type="number" step="0.01"/></div>
            <div><label>未稅</label><input id="calc-net" class="input" type="text" disabled/></div>
            <div><label>稅額</label><input id="calc-tax" class="input" type="text" disabled/></div>
          </div>
          <div class="row" style="margin-top:8px">
            <button class="btn" id="btnCalc">試算</button>
            <button class="btn ok" id="btnSaveSettings">保存為預設</button>
          </div>
        </div>
      </section>

      <!-- 4.5 results -->
      <section id="view-results" class="card" aria-labelledby="h-results" hidden>
        <h2 id="h-results">批量結果</h2>
        <div class="grid3" style="margin-bottom:12px">
          <div class="card">
            <h3>本批總表</h3>
            <div id="batchTotals" class="muted">尚無資料</div>
          </div>
          <div class="card">
            <h3>B2C 舍入差合計</h3>
            <div id="roundingSum" class="muted">—</div>
          </div>
          <div class="card">
            <h3>快速動作</h3>
            <div class="row"><button class="btn" data-view-jump="export">前往匯出</button></div>
          </div>
        </div>
        <div class="row" style="margin-bottom:8px">
          <input id="resSearch" class="input" placeholder="搜尋檔名…" />
          <select id="resSort" class="input" style="max-width:220px">
            <option value="name">檔名</option>
            <option value="errors">異常數</option>
            <option value="sum">合計（含稅）</option>
          </select>
        </div>
        <table aria-label="批量結果表">
          <thead><tr>
            <th>檔名</th><th>行數</th><th>異常數</th>
            <th class="right">B2C 未稅/稅/含稅</th>
            <th class="right">B2B 未稅/稅/含稅</th>
            <th class="right">小計 未稅/稅/含稅</th>
            <th class="right">操作</th>
          </tr></thead>
          <tbody id="resultsBody"></tbody>
        </table>
      </section>

      <!-- 4.6 file-detail -->
      <section id="view-fileDetail" class="card" aria-labelledby="h-fileDetail" hidden>
        <h2 id="h-fileDetail">單檔詳情</h2>
        <div class="grid3" style="margin-bottom:12px">
          <div class="card"><h3>B2C 匯總</h3><div id="fdB2C" class="muted">—</div></div>
          <div class="card"><h3>B2B 匯總</h3><div id="fdB2B" class="muted">—</div></div>
          <div class="card"><h3>檔案小計</h3><div id="fdSum" class="muted">—</div></div>
        </div>
        <div class="card">
          <h3>欄位映射摘要</h3>
          <div id="fdMap" class="muted">—</div>
        </div>
        <div class="card" style="margin-top:12px">
          <h3>異常摘要（Top）</h3>
          <div id="fdAnom" class="muted">—</div>
        </div>
        <div class="row" style="margin-top:10px">
          <button class="btn" id="btnPrevFile">上一檔</button>
          <button class="btn" id="btnNextFile">下一檔</button>
          <button class="btn" data-view-jump="results" style="margin-left:auto">返回結果</button>
        </div>
      </section>

      <!-- 4.7 anomalies -->
      <section id="view-anomalies" class="card" aria-labelledby="h-anomalies" hidden>
        <h2 id="h-anomalies">異常清單</h2>
        <div class="row">
          <select id="anomFilterFile" class="input" style="max-width:260px"><option value="">全部檔案</option></select>
          <select id="anomFilterType" class="input" style="max-width:260px">
            <option value="">全部類型</option>
            <option value="BAD_TAX_ID">BAD_TAX_ID</option>
            <option value="NUM_PARSE_ERROR">NUM_PARSE_ERROR</option>
            <option value="EMPTY_FIELD">EMPTY_FIELD</option>
          </select>
          <button class="btn" id="btnExportAnom">導出 CSV</button>
        </div>
        <table aria-label="異常表" style="margin-top:10px">
          <thead><tr><th>檔名</th><th>行號</th><th>類型</th><th>原始值</th><th>建議</th></tr></thead>
          <tbody id="anomBody"></tbody>
        </table>
      </section>

      <!-- 4.8 history -->
      <section id="view-history" class="card" aria-labelledby="h-history" hidden>
        <h2 id="h-history">歷史紀錄</h2>
        <div class="row" style="margin-bottom:8px">
          <button class="btn" id="btnRefreshHistory">重新整理</button>
          <button class="btn warn" id="btnClearHistory">導出並清空</button>
        </div>
        <table aria-label="歷史列表">
          <thead><tr><th>時間</th><th>檔案數</th><th>設定摘要</th><th>合計</th><th>異常</th><th class="right">操作</th></tr></thead>
          <tbody id="historyBody"></tbody>
        </table>
      </section>

      <!-- 4.9 export -->
      <section id="view-export" class="card" aria-labelledby="h-export" hidden>
        <h2 id="h-export">匯出中心</h2>
        <div class="grid3">
          <div>
            <label>匯出範圍</label>
            <select id="exp-scope" class="input">
              <option value="results">批量結果列表</option>
              <option value="batchTotal">批次總表</option>
              <option value="fileDetail">單檔詳情（目前選中）</option>
              <option value="anomalies">異常清單</option>
            </select>
          </div>
          <div>
            <label>格式</label>
            <select id="exp-format" class="input">
              <option value="csv">CSV</option>
              <option value="json">JSON</option>
            </select>
          </div>
          <div>
            <label>檔名模板</label>
            <input id="exp-name" class="input" value="{date}-{batchId}-{type}"/>
          </div>
        </div>
        <div class="row" style="margin-top:10px">
          <button class="btn primary" id="btnDoExport">開始匯出</button>
        </div>
        <div class="muted" id="expInfo" style="margin-top:8px">完成後將於本機下載，無需伺服器。</div>
      </section>

      <!-- 4.10 help -->
      <section id="view-help" class="card" aria-labelledby="h-help" hidden>
        <h2 id="h-help">幫助</h2>
        <ol>
          <li>上傳 → 匯入 CSV（含表頭）。</li>
          <li>欄位映射 → 對應統編/應稅/稅/總計。</li>
          <li>設定 → 稅率、精度、空值策略。</li>
          <li>計算 → 自動產生結果與總表。</li>
          <li>查看 → 批量結果/單檔詳情/異常清單。</li>
          <li>匯出 → 於本機下載 CSV/JSON。</li>
        </ol>
        <p class="muted">隱私：資料僅存本機 IndexedDB；可於「歷史」導出並清空。</p>
      </section>
    </main>
  </div>

  <div class="footer">© 本機離線運行 · 無需上傳任何資料</div>
</div>

<!-- 內嵌腳本：狀態、CSV 解析、B2C/B2B 計算、IndexedDB、匯出 -->
<script>
(() => {
  // ====== 工具 ======
  const $ = sel => document.querySelector(sel);
  const $$= sel => Array.from(document.querySelectorAll(sel));
  const fmt = (n, p=0) => (isFinite(n)? Number(n).toFixed(p):'—');
  const nowId = () => new Date().toISOString().replace(/[:.]/g,'').slice(0,15);
  const download = (name, blob) => { const a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download=name; a.click(); setTimeout(()=>URL.revokeObjectURL(a.href), 2000); };

  // ====== 主題切換 ======
  const themeBtn = $('#themeToggle');
  themeBtn.addEventListener('click', ()=>{
    const t = document.body.getAttribute('data-theme')==='dark'?'light':'dark';
    document.body.setAttribute('data-theme', t);
    localStorage.setItem('theme', t);
  });
  (function initTheme(){
    const t = localStorage.getItem('theme')||'light';
    document.body.setAttribute('data-theme', t);
  })();

  // ====== IndexedDB 基礎 ======
  let db;
  const DB_NAME='invoice_tool_db', DB_VER=1;
  const openDB = () => new Promise((res,rej)=>{
    const req = indexedDB.open(DB_NAME, DB_VER);
    req.onupgradeneeded = e=>{
      const db = e.target.result;
      db.createObjectStore('settings', {keyPath:'id'});
      db.createObjectStore('mappings', {keyPath:'id', autoIncrement:true});
      db.createObjectStore('batches', {keyPath:'id'});
    };
    req.onsuccess = ()=>{ db = req.result; res(); };
    req.onerror = ()=>rej(req.error);
  });
  const idbPut = (store, val)=> new Promise((res,rej)=>{
    const tx=db.transaction(store,'readwrite'); tx.objectStore(store).put(val);
    tx.oncomplete=()=>res(); tx.onerror=()=>rej(tx.error);
  });
  const idbGetAll = (store)=> new Promise((res,rej)=>{
    const tx=db.transaction(store,'readonly'); const req=tx.objectStore(store).getAll();
    req.onsuccess=()=>res(req.result); req.onerror=()=>rej(req.error);
  });
  const idbDelete = (store, key)=> new Promise((res,rej)=>{
    const tx=db.transaction(store,'readwrite'); tx.objectStore(store).delete(key);
    tx.oncomplete=()=>res(); tx.onerror=()=>rej(tx.error);
  });

  // ====== 全域狀態 ======
  const state = {
    settings: { id:'default', rate:5, precision:0, empty:'skip' },
    mapping: { taxid:null, sales:null, tax:null, total:null, headers:[] },
    batch: { id: null, time:null, files:[], totals:null, anomalies:[] },
    currentFileIndex: 0
  };

  // ====== 視圖切換 ======
  const showView = (view)=>{
    $$('#topNav button, .side .snav button').forEach(b=>b.classList.toggle('active', b.dataset.view===view));
    $$('#views > section').forEach(sec=>sec.hidden = (sec.id !== 'view-'+view));
    if (view==='results') renderResults();
    if (view==='anomalies') renderAnomalies();
    if (view==='history') renderHistory();
    if (view==='fileDetail') renderFileDetail();
    updateSettingsSummary();
  };
  $('#topNav').addEventListener('click', e=>{
    const b=e.target.closest('button'); if(!b) return;
    showView(b.dataset.view);
  });
  $('#subNav').addEventListener('click', e=>{
    const b=e.target.closest('button'); if(!b) return;
    showView(b.dataset.view);
  });
  $$('#views [data-view-jump]').forEach(b=>b.addEventListener('click', e=>{
    showView(e.currentTarget.dataset.viewJump);
  }));

  // ====== 上傳（CSV MVP） ======
  const fileInput = $('#fileInput');
  const queueBody = $('#uploadQueue #queueBody');
  const btnParse = $('#btnParse');
  const btnClearQueue = $('#btnClearQueue');
  let fileQueue = []; // {file, name, size, status, text}

  fileInput.addEventListener('change', ()=>{
    for(const f of fileInput.files){
      fileQueue.push({file:f, name:f.name, size:f.size, status:'待處理', text:null});
    }
    renderQueue();
  });
  btnClearQueue.addEventListener('click', ()=>{ fileQueue=[]; renderQueue(); });

  function renderQueue(){
    queueBody.innerHTML = fileQueue.map((q,i)=>`
      <tr>
        <td>${q.name}</td>
        <td>${(q.size/1024).toFixed(1)} KB</td>
        <td>${q.status}</td>
        <td class="right">
          <button class="btn" data-remove="${i}">移除</button>
        </td>
      </tr>
    `).join('') || `<tr><td colspan="4" class="muted">尚無檔案</td></tr>`;
    queueBody.querySelectorAll('[data-remove]').forEach(btn=>{
      btn.onclick=()=>{ fileQueue.splice(Number(btn.dataset.remove),1); renderQueue(); };
    });
  }

  function readFileAsText(f){ return new Promise((res,rej)=>{ const r=new FileReader(); r.onload=()=>res(r.result); r.onerror=rej; r.readAsText(f,'utf-8'); }); }

  btnParse.addEventListener('click', async ()=>{
    if (!fileQueue.length) return;
    state.batch = { id: 'B'+nowId(), time: new Date().toISOString(), files:[], totals:null, anomalies:[] };
    $('#progressArea').textContent = '解析中…';
    for (let i=0;i<fileQueue.length;i++){
      const q=fileQueue[i]; q.status='讀取中'; renderQueue();
      try{
        q.text = await readFileAsText(q.file);
        q.status='解析中'; renderQueue();
        const parsed = parseCSV(q.text); // {headers, rows:[{...}]}
        const fileObj = computeFile(q.name, parsed);
        state.batch.files.push(fileObj);
        state.batch.anomalies.push(...fileObj.anomalies.map(a=>({...a, file:q.name})));
        q.status='完成';
      }catch(err){
        q.status='錯誤';
      }
      renderQueue();
    }
    computeBatchTotals();
    $('#progressArea').textContent = '完成。已產生批量結果與總表。';
    // 儲存至歷史
    await ensureDB();
    await idbPut('batches', JSON.parse(JSON.stringify(state.batch)));
    renderResults();
    showView('results');
  });

  // ====== 簡易 CSV 解析（支援引號與逗號，UTF-8） ======
  function parseCSV(text){
    // Split lines robustly
    const lines = text.replace(/\r\n/g,'\n').replace(/\r/g,'\n').split('\n').filter(l=>l.trim().length>0);
    if (!lines.length) return {headers:[], rows:[]};
    const headers = smartSplit(lines[0]).map(h=>h.trim());
    const rows=[];
    for (let i=1;i<lines.length;i++){
      const cells = smartSplit(lines[i]);
      const o={}; headers.forEach((h,idx)=>o[h]=cells[idx]??'');
      rows.push(o);
    }
    return {headers, rows};
  }
  function smartSplit(line){
    const out=[]; let cur='', inq=false;
    for(let i=0;i<line.length;i++){
      const c=line[i], n=line[i+1];
      if (c=='"'){ if(inq && n=='"'){ cur+='"'; i++; } else inq=!inq; }
      else if (c==',' && !inq){ out.push(cur); cur=''; }
      else cur+=c;
    }
    out.push(cur); return out;
  }

  // ====== 欄位映射：自動與手動 ======
  const mapSel = { taxid:$('#map-taxid'), sales:$('#map-sales'), tax:$('#map-tax'), total:$('#map-total') };
  const detectedDiv = $('#detectedHeaders');
  $('#btnSaveMapping').addEventListener('click', async ()=>{
    await ensureDB();
    await idbPut('mappings', { id: Date.now(), name:'模板-'+nowId(), map:{...state.mapping}, ts: Date.now() });
    alert('已保存映射模板');
  });
  $('#btnApplyMapping').addEventListener('click', ()=>{
    state.mapping.taxid = mapSel.taxid.value||null;
    state.mapping.sales = mapSel.sales.value||null;
    state.mapping.tax   = mapSel.tax.value||null;
    state.mapping.total = mapSel.total.value||null;
    alert('已套用本批映射。重新計算請重新上傳或於結果頁刷新。');
  });

  function suggestMapping(headers){
    const norm = s=> (s||'').toLowerCase().replace(/\s+/g,'').replace(/[（）()]/g,'');
    const find = (alts)=> headers.find(h=> alts.some(a=> norm(h).includes(a)));
    const taxid = find(['統編','買方統一編號','buyer','vat']);
    const sales = find(['應稅','銷售額','taxablesales','netsales']); // netsales 需人工確認
    const tax   = find(['營業稅','銷項','tax']);
    const total = find(['總計','含稅','totalamount','amount']);
    state.mapping.headers = headers;
    state.mapping.taxid = taxid||'';
    state.mapping.sales = sales||'';
    state.mapping.tax   = tax||'';
    state.mapping.total = total||'';
    [mapSel.taxid,mapSel.sales,mapSel.tax,mapSel.total].forEach((s,i)=>{
      s.innerHTML = headers.map(h=>`<option ${[state.mapping.taxid,state.mapping.sales,state.mapping.tax,state.mapping.total][i]===h?'selected':''}>${h}</option>`).join('');
    });
    detectedDiv.textContent = '偵測表頭：' + headers.join(' | ');
  }

  // ====== 設定、試算 ======
  const setRate = $('#set-rate'), setPrec = $('#set-precision'), setEmpty = $('#set-empty');
  $('#btnCalc').addEventListener('click', ()=>{
    const gross = Number($('#calc-gross').value||0);
    const rate = Number(setRate.value||5);
    const prec = Number(setPrec.value||0);
    const net = round(gross / (1+rate/100), prec);
    const tax = round(net * (rate/100), prec);
    $('#calc-net').value = fmt(net, prec);
    $('#calc-tax').value = fmt(tax, prec);
  });
  $('#btnSaveSettings').addEventListener('click', async ()=>{
    state.settings = { id:'default', rate:Number(setRate.value||5), precision:Number(setPrec.value||0), empty:setEmpty.value };
    await ensureDB(); await idbPut('settings', state.settings);
    updateSettingsSummary();
    alert('已保存為預設');
  });
  function updateSettingsSummary(){
    $('#settingsSummary').textContent = `稅率 ${state.settings.rate}% · 精度 ${state.settings.precision===0?'整數':state.settings.precision+'位'} · 空值策略 ${state.settings.empty==='skip'?'跳過':'視為0記異常'}`;
  }

  // ====== 計算核心 ======
  function toNumber(raw){
    if (raw==null) return NaN;
    let s = String(raw).trim();
    if (!s) return NaN;
    // 全形->半形、去千分位、括號負數
    s = s.replace(/[Ａ-Ｚａ-ｚ０-９．，]/g, ch=>String.fromCharCode(ch.charCodeAt(0)-0xFEE0));
    s = s.replace(/,/g,'').replace(/\s+/g,'');
    if (/^\(.*\)$/.test(s)) s='-'+s.slice(1,-1);
    const n = Number(s);
    return isFinite(n)? n : NaN;
  }
  const round = (v,p)=> Math.round((v + Number.EPSILON) * Math.pow(10,p)) / Math.pow(10,p);

  function computeFile(name, parsed){
    // 若尚無映射，先自動推測
    if (!state.mapping.headers.length) suggestMapping(parsed.headers);

    const m = state.mapping;
    const rate = Number(state.settings.rate||5);
    const prec = Number(state.settings.precision||0);
    const empty = state.settings.empty||'skip';

    let rows=0, anomalies=[], b2c={net:0,tax:0,gross:0, roundSum:0}, b2b={net:0,tax:0,gross:0}, sum={net:0,tax:0,gross:0};
    parsed.rows.forEach((r, idx)=>{
      rows++;
      const taxid = (r[m.taxid]??'').toString().trim();
      const s_sales = r[m.sales], s_tax = r[m.tax], s_total = r[m.total];
      // 驗證統編
      const isNum8 = /^[0-9]{8}$/.test(taxid);
      if (!isNum8 && taxid!==''){
        anomalies.push({row:idx+2, type:'BAD_TAX_ID', raw:taxid, hint:'須為 8 碼數字或空'});
        return; // 不入合計
      }
      // 取得數值
      let vSales = toNumber(s_sales);
      let vTax   = toNumber(s_tax);
      let vTotal = toNumber(s_total);

      // 空值策略
      const need = (x)=> (isNaN(x)||x===null);
      if (taxid==='00000000'){ // B2C：含稅=應稅銷售額
        if (need(vSales)){
          if (empty==='skip'){ anomalies.push({row:idx+2, type:'EMPTY_FIELD', raw:'應稅銷售額', hint:'跳過'}); return; }
          vSales=0; anomalies.push({row:idx+2, type:'EMPTY_FIELD', raw:'應稅銷售額', hint:'視為 0'});
        }
        const gross = vSales;
        const net = round(gross / (1+rate/100), prec);
        const tax = round(net * (rate/100), prec);
        const diff = round(net + tax - gross, prec);
        b2c.net += net; b2c.tax += tax; b2c.gross += gross; b2c.roundSum += diff;
        sum.net += net; sum.tax += tax; sum.gross += gross;
      } else { // B2B：直接合計三欄
        // 允許負值
        if (need(vSales)){ if (empty==='skip'){ anomalies.push({row:idx+2,type:'EMPTY_FIELD',raw:'應稅銷售額',hint:'跳過'}); return;} vSales=0; anomalies.push({row:idx+2,type:'EMPTY_FIELD',raw:'應稅銷售額',hint:'視為 0'}); }
        if (need(vTax)){ if (empty==='skip'){ anomalies.push({row:idx+2,type:'EMPTY_FIELD',raw:'營業稅',hint:'跳過'}); return;} vTax=0; anomalies.push({row:idx+2,type:'EMPTY_FIELD',raw:'營業稅',hint:'視為 0'}); }
        if (need(vTotal)){ if (empty==='skip'){ anomalies.push({row:idx+2,type:'EMPTY_FIELD',raw:'總計',hint:'跳過'}); return;} vTotal=0; anomalies.push({row:idx+2,type:'EMPTY_FIELD',raw:'總計',hint:'視為 0'}); }
        b2b.net += vSales; b2b.tax += vTax; b2b.gross += vTotal;
        sum.net += vSales; sum.tax += vTax; sum.gross += vTotal;
      }
    });
    return {
      name, rows, mapping: {...m}, b2c, b2b, sum,
      anomalies
    };
  }

  function computeBatchTotals(){
    const b = state.batch;
    const total = { b2c:{net:0,tax:0,gross:0,roundSum:0}, b2b:{net:0,tax:0,gross:0}, sum:{net:0,tax:0,gross:0} };
    b.files.forEach(f=>{
      total.b2c.net += f.b2c.net; total.b2c.tax += f.b2c.tax; total.b2c.gross += f.b2c.gross; total.b2c.roundSum += f.b2c.roundSum;
      total.b2b.net += f.b2b.net; total.b2b.tax += f.b2b.tax; total.b2b.gross += f.b2b.gross;
      total.sum.net += f.sum.net; total.sum.tax += f.sum.tax; total.sum.gross += f.sum.gross;
    });
    b.totals = total;
  }

  // ====== 渲染：結果、單檔、異常、歷史 ======
  function renderResults(){
    // 總表卡
    const p = state.settings.precision;
    if (state.batch.totals){
      const t = state.batch.totals;
      $('#batchTotals').innerHTML = `
        <div>B2C：未稅 ${fmt(t.b2c.net,p)}、稅 ${fmt(t.b2c.tax,p)}、含稅 ${fmt(t.b2c.gross,p)}</div>
        <div>B2B：未稅 ${fmt(t.b2b.net,p)}、稅 ${fmt(t.b2b.tax,p)}、含稅 ${fmt(t.b2b.gross,p)}</div>
        <div>總計：未稅 ${fmt(t.sum.net,p)}、稅 ${fmt(t.sum.tax,p)}、含稅 ${fmt(t.sum.gross,p)}</div>`;
      $('#roundingSum').textContent = fmt(t.b2c.roundSum, p);
    } else {
      $('#batchTotals').textContent='尚無資料';
      $('#roundingSum').textContent='—';
    }
    // 列表
    const kw = ($('#resSearch').value||'').toLowerCase();
    const sortKey = $('#resSort').value;
    let list = (state.batch.files||[]).slice();
    if (kw) list = list.filter(f=> f.name.toLowerCase().includes(kw));
    if (sortKey==='errors') list.sort((a,b)=> (b.anomalies.length)-(a.anomalies.length));
    else if (sortKey==='sum') list.sort((a,b)=> (b.sum.gross)-(a.sum.gross));
    else list.sort((a,b)=> a.name.localeCompare(b.name));
    const p2 = state.settings.precision;
    $('#resultsBody').innerHTML = list.map((f,idx)=>`
      <tr>
        <td>${f.name}</td>
        <td>${f.rows}</td>
        <td>${f.anomalies.length? `<span class="badge warn">${f.anomalies.length}</span>`:'0'}</td>
        <td class="right">${fmt(f.b2c.net,p2)} / ${fmt(f.b2c.tax,p2)} / ${fmt(f.b2c.gross,p2)}</td>
        <td class="right">${fmt(f.b2b.net,p2)} / ${fmt(f.b2b.tax,p2)} / ${fmt(f.b2b.gross,p2)}</td>
        <td class="right">${fmt(f.sum.net,p2)} / ${fmt(f.sum.tax,p2)} / ${fmt(f.sum.gross,p2)}</td>
        <td class="right">
          <button class="btn" data-open="${idx}">詳情</button>
          <button class="btn" data-expfile="${idx}">導出</button>
        </td>
      </tr>
    `).join('') || `<tr><td colspan="7" class="muted">尚無結果，請先上傳。</td></tr>`;
    // 綁定
    $('#resultsBody').querySelectorAll('[data-open]').forEach(b=> b.onclick=()=>{
      state.currentFileIndex = Number(b.dataset.open); showView('fileDetail');
    });
    $('#resultsBody').querySelectorAll('[data-expfile]').forEach(b=> b.onclick=()=>{
      exportSingleFile(Number(b.dataset.expfile));
    });
    // 事件
    $('#resSearch').oninput=renderResults;
    $('#resSort').onchange=renderResults;
    // 異常頁的檔名下拉
    const sel = $('#anomFilterFile');
    sel.innerHTML = '<option value="">全部檔案</option>' + (state.batch.files||[]).map(f=>`<option>${f.name}</option>`).join('');
  }

  function renderFileDetail(){
    const f = state.batch.files[state.currentFileIndex];
    if (!f){ $('#fdB2C').textContent='—'; $('#fdB2B').textContent='—'; $('#fdSum').textContent='—'; $('#fdMap').textContent='—'; $('#fdAnom').textContent='—'; return; }
    const p=state.settings.precision;
    $('#fdB2C').innerHTML = `未稅 ${fmt(f.b2c.net,p)}、稅 ${fmt(f.b2c.tax,p)}、含稅 ${fmt(f.b2c.gross,p)}（舍入差合計 ${fmt(f.b2c.roundSum,p)}）`;
    $('#fdB2B').innerHTML = `未稅 ${fmt(f.b2b.net,p)}、稅 ${fmt(f.b2b.tax,p)}、含稅 ${fmt(f.b2b.gross,p)}`;
    $('#fdSum').innerHTML = `未稅 ${fmt(f.sum.net,p)}、稅 ${fmt(f.sum.tax,p)}、含稅 ${fmt(f.sum.gross,p)}`;
    $('#fdMap').textContent = `統編：${f.mapping.taxid||'—'}；應稅：${f.mapping.sales||'—'}；稅：${f.mapping.tax||'—'}；總計：${f.mapping.total||'—'}`;
    $('#fdAnom').innerHTML = (f.anomalies.slice(0,10).map(a=>`#${a.row} ${a.type}：${a.raw}（${a.hint}）`).join('<br>')) || '—';

    $('#btnPrevFile').onclick=()=>{ if(state.currentFileIndex>0){ state.currentFileIndex--; renderFileDetail(); } };
    $('#btnNextFile').onclick=()=>{ if(state.currentFileIndex<state.batch.files.length-1){ state.currentFileIndex++; renderFileDetail(); } };
  }

  function renderAnomalies(){
    const file = $('#anomFilterFile').value, type=$('#anomFilterType').value;
    let list = (state.batch.anomalies||[]).slice();
    if (file) list = list.filter(a=>a.file===file);
    if (type) list = list.filter(a=>a.type===type);
    $('#anomBody').innerHTML = list.map(a=>`
      <tr><td>${a.file}</td><td>${a.row}</td><td>${a.type}</td><td>${a.raw}</td><td>${a.hint}</td></tr>
    `).join('') || `<tr><td colspan="5" class="muted">目前沒有異常。</td></tr>`;
    $('#anomFilterFile').onchange=renderAnomalies;
    $('#anomFilterType').onchange=renderAnomalies;
  }

  async function renderHistory(){
    await ensureDB();
    const items = await idbGetAll('batches');
    items.sort((a,b)=> (b.time.localeCompare(a.time)));
    $('#historyBody').innerHTML = items.map(b=>{
      const p=state.settings.precision;
      const t=b.totals || {b2c:{net:0,tax:0,gross:0,roundSum:0}, b2b:{net:0,tax:0,gross:0}, sum:{net:0,tax:0,gross:0}};
      const sum=`未稅 ${fmt(t.sum.net,p)}、稅 ${fmt(t.sum.tax,p)}、含稅 ${fmt(t.sum.gross,p)}`;
      const anom = (b.files||[]).reduce((x,f)=>x+(f.anomalies?.length||0),0);
      return `<tr>
        <td>${new Date(b.time).toLocaleString()}</td>
        <td>${b.files?.length||0}</td>
        <td>稅率 ${state.settings.rate}% · 精度 ${state.settings.precision===0?'整數':'兩位'}</td>
        <td>${sum}</td>
        <td>${anom}</td>
        <td class="right">
          <button class="btn" data-openh="${b.id}">打開</button>
          <button class="btn" data-exp="${b.id}">再匯出</button>
          <button class="btn err" data-del="${b.id}">刪除</button>
        </td>
      </tr>`;
    }).join('') || `<tr><td colspan="6" class="muted">尚無歷史。</td></tr>`;
    $('#btnRefreshHistory').onclick=renderHistory;
    $('#btnClearHistory').onclick=async ()=>{
      const items = await idbGetAll('batches');
      const json = new Blob([JSON.stringify(items,null,2)],{type:'application/json'});
      download('batches-backup.json', json);
      for(const it of items) await idbDelete('batches', it.id);
      renderHistory();
      alert('已導出並清空歷史。');
    };
    // 綁定
    $('#historyBody').querySelectorAll('[data-del]').forEach(b=> b.onclick=async ()=>{
      await idbDelete('batches', b.dataset.del); renderHistory();
    });
    $('#historyBody').querySelectorAll('[data-openh]').forEach(b=> b.onclick=async ()=>{
      // 載回當前批次（只讀視圖）
      const items = await idbGetAll('batches');
      const found = items.find(x=>x.id===b.dataset.openh);
      if (found){ state.batch = JSON.parse(JSON.stringify(found)); renderResults(); showView('results'); }
    });
    $('#historyBody').querySelectorAll('[data-exp]').forEach(b=> b.onclick=async ()=>{
      const items = await idbGetAll('batches');
      const found = items.find(x=>x.id===b.dataset.exp);
      if(found){
        // 匯出其總表 JSON
        const blob = new Blob([JSON.stringify(found.totals||{},null,2)],{type:'application/json'});
        download(`batch-${found.id}-totals.json`, blob);
      }
    });
  }

  // ====== 匯出中心 ======
  $('#btnDoExport').addEventListener('click', ()=>{
    const scope = $('#exp-scope').value, fmtType=$('#exp-format').value;
    const nameTpl = $('#exp-name').value;
    const fname = (type)=> nameTpl.replace('{date}', new Date().toISOString().slice(0,10))
                                  .replace('{batchId}', state.batch.id||'cur')
                                  .replace('{type}', type);
    if (fmtType==='json'){
      let data={};
      if (scope==='results') data = state.batch.files||[];
      if (scope==='batchTotal') data = state.batch.totals||{};
      if (scope==='fileDetail') data = state.batch.files?.[state.currentFileIndex]||{};
      if (scope==='anomalies') data = state.batch.anomalies||[];
      download(fname(scope)+'.json', new Blob([JSON.stringify(data,null,2)],{type:'application/json'}));
    } else {
      // CSV
      let csv=''; const p=state.settings.precision;
      if (scope==='results'){
        csv = '檔名,行數,異常數,B2C未稅,B2C稅,B2C含稅,B2B未稅,B2B稅,B2B含稅,小計未稅,小計稅,小計含稅\n';
        (state.batch.files||[]).forEach(f=>{
          csv += [
            f.name, f.rows, f.anomalies.length,
            fmt(f.b2c.net,p), fmt(f.b2c.tax,p), fmt(f.b2c.gross,p),
            fmt(f.b2b.net,p), fmt(f.b2b.tax,p), fmt(f.b2b.gross,p),
            fmt(f.sum.net,p), fmt(f.sum.tax,p), fmt(f.sum.gross,p)
          ].join(',')+'\n';
        });
      }
      if (scope==='batchTotal'){
        const t=state.batch.totals||{b2c:{net:0,tax:0,gross:0,roundSum:0},b2b:{net:0,tax:0,gross:0},sum:{net:0,tax:0,gross:0}};
        csv = '區塊,未稅,稅,含稅,備註\n';
        csv += `B2C,${fmt(t.b2c.net,p)},${fmt(t.b2c.tax,p)},${fmt(t.b2c.gross,p)},舍入差合計 ${fmt(t.b2c.roundSum,p)}\n`;
        csv += `B2B,${fmt(t.b2b.net,p)},${fmt(t.b2b.tax,p)},${fmt(t.b2b.gross,p)},\n`;
        csv += `總計,${fmt(t.sum.net,p)},${fmt(t.sum.tax,p)},${fmt(t.sum.gross,p)},\n`;
      }
      if (scope==='fileDetail'){
        const f = state.batch.files?.[state.currentFileIndex];
        if (!f){ alert('尚未選擇檔案'); return; }
        csv = '項目,未稅,稅,含稅,備註\n';
        csv += `B2C,${fmt(f.b2c.net,p)},${fmt(f.b2c.tax,p)},${fmt(f.b2c.gross,p)},舍入差合計 ${fmt(f.b2c.roundSum,p)}\n`;
        csv += `B2B,${fmt(f.b2b.net,p)},${fmt(f.b2b.tax,p)},${fmt(f.b2b.gross,p)},\n`;
        csv += `小計,${fmt(f.sum.net,p)},${fmt(f.sum.tax,p)},${fmt(f.sum.gross,p)},\n`;
      }
      if (scope==='anomalies'){
        csv = '檔名,行號,類型,原始值,建議\n';
        (state.batch.anomalies||[]).forEach(a=>{
          csv += [a.file,a.row,a.type,JSON.stringify(a.raw),a.hint].join(',')+'\n';
        });
      }
      download(fname(scope)+'.csv', new Blob([csv],{type:'text/csv;charset=utf-8'}));
    }
  });

  function exportSingleFile(idx){
    const f = state.batch.files[idx]; const p=state.settings.precision;
    if (!f) return;
    let csv ='項目,未稅,稅,含稅,備註\n';
    csv += `B2C,${fmt(f.b2c.net,p)},${fmt(f.b2c.tax,p)},${fmt(f.b2c.gross,p)},舍入差合計 ${fmt(f.b2c.roundSum,p)}\n`;
    csv += `B2B,${fmt(f.b2b.net,p)},${fmt(f.b2b.tax,p)},${fmt(f.b2b.gross,p)},\n`;
    csv += `小計,${fmt(f.sum.net,p)},${fmt(f.sum.tax,p)},${fmt(f.sum.gross,p)},\n`;
    download(`${(f.name||'file').replace(/\.[^./]+$/,'')}-summary.csv`, new Blob([csv],{type:'text/csv;charset=utf-8'}));
  }

  // ====== DB 初始化與預設載入 ======
  async function ensureDB(){ if (db) return; await openDB(); const sets=await idbGetAll('settings'); if(sets.length){ state.settings=sets.find(s=>s.id==='default')||state.settings; } updateSettingsForm(); }
  function updateSettingsForm(){
    setRate.value = state.settings.rate;
    setPrec.value = String(state.settings.precision);
    setEmpty.value= state.settings.empty;
    updateSettingsSummary();
  }

  // ====== 自動映射填充（當第一個檔案解析完成會觸發） ======
  // 已在 computeFile 中於首次觸發 suggestMapping()

  // ====== 初始 ======
  (async function init(){
    try{ await ensureDB(); }catch(e){}
    renderResults();
    // 離線徽章
    $('#offlineBadge').textContent = '離線可用';
  })();

  // ====== PWA（可選）：以動態 SW 啟用快取（需 https/localhost） ======
  if ('serviceWorker' in navigator){
    const swCode = `
      const CACHE='invoice-cache-v1';
      self.addEventListener('install',e=>{ e.waitUntil(caches.open(CACHE).then(c=>c.addAll(['./']))); self.skipWaiting(); });
      self.addEventListener('activate',e=>{ e.waitUntil(self.clients.claim()); });
      self.addEventListener('fetch',e=>{ e.respondWith(caches.match(e.request).then(r=>r||fetch(e.request).catch(()=>caches.match('./')))); });
    `;
    const blob = new Blob([swCode], {type:'text/javascript'});
    const swURL = URL.createObjectURL(blob);
    navigator.serviceWorker.register(swURL).catch(()=>{ /* 忽略 */ });
  }
})();
</script>
</body>
</html>