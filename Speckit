/speckit.constitution 目標：交付「單一 HTML 檔」即可在無網路（離線）環境中正常運作的應用，嚴禁任何外部連結或 CDN，相依資源（CSS/JS/字型/圖示/影像/資料樣本）一律內嵌於同一檔案。 原則：

離線優先與自給自足：功能不依賴遠端 API、雲端同步、第三方庫載入或安裝步驟；檔案可在無網路環境開啟即用。

可攜與長期可讀：單檔可存檔、複製、備份；資料以人類可讀格式（如 JSON）匯出/匯入。

安全與隱私：不蒐集或傳輸個資；程式不使用 eval 等危險 API；若需執行權限操作（檔案讀寫）以使用者同意的瀏覽器原生對話框進行。

效能與容量：首次可互動（TTI）≤ 1s（中階裝置，無網路）；單檔目標 ≤ 2 MB（含字型/圖示/腳本）；互動操作回應 < 100ms。

可用性與無障礙：鍵盤操作完整、焦點可見、提供暗/亮色系；對比度符合 WCAG AA。

相容性：現代 Chromium/Firefox/Safari（近兩年版本）；在 file:// 與本機 HTTP 伺服模式均可執行（若功能在 file:// 受限須提供替代路徑）。

測試與驗收：離線模式功能清單全部可於飛航模式下通過；關鍵流程（建立/編輯/刪除/匯出/匯入）具手動測試腳本與檢查表。 範圍邊界：

不做：雲端同步、帳號系統、伺服器端元件、外掛安裝。

必做：本地持久化、完整內嵌資源、可視化的資料備份/還原。 合規條款：

交付物：app.html（單一檔），附《使用說明與測試清單》。

文件語言：繁體中文。 （流程依據 Spec-Driven Development /speckit.* 指令法。）


/speckit.specify 我們要打造：「離線單檔應用範本（可擴充）」——一個無外部依賴、可直接雙擊開啟使用的單一 HTML 應用。它提供最小可用功能（MVP），並可作為未來任何單檔離線工具的骨架。 核心使用者故事：

作為使用者，我可以在無網路下開啟 app.html 並立即使用基本資料管理（新增、編輯、刪除）功能。

我可以將目前資料匯出為單一 JSON 檔，日後在另一臺離線電腦上用相同 app.html 匯入還原。

我可以在 file:// 環境中運作；若我從本機啟動簡易 HTTP（離線）也能獲得相同或更佳體驗。

我可以用鍵盤快速操作，並在明/暗色之間切換。

我可以在沒有任何外部字型或圖庫的情況下，仍看到一致的版面與圖示（皆內嵌）。 功能（MVP）：

資料模型：通用「項目」集合（欄位：id、title、content、tags、createdAt、updatedAt）。

CRUD 介面：清單、搜尋/過濾、詳情編輯器（離線即時儲存）。

本地持久化：以 localStorage 為預設；提供「匯出/匯入 JSON」以跨裝置搬遷。

自我診斷：顯示目前執行環境（file:// 或 http://localhost），並提示可用/不可用能力。

完全內嵌資源：CSS、JS、SVG 圖示、（可選）可變字型皆以 data URI 或 <style>/<script> 內嵌。 非功能性需求：

檔案體積目標 ≤ 2 MB；初次渲染 ≤ 1s；互動延遲 < 100ms。

A11y：焦點環、ARIA 標籤、適當語意標籤、可達 AA 對比。 交互流程（摘要）：

開啟 app.html → 首次載入建立空資料庫 → 新增/編輯項目即時儲存 → 需要搬遷或備份時匯出 JSON → 於其他環境匯入 JSON 還原。 風險與對策：

file:// 限制無法使用 Service Worker：採「純前端 + 本地儲存 + 手動匯出/匯入」策略；如需快取與安裝式體驗，改以本機 HTTP（離線）模式選用 PWA（見計畫選項）。 成功標準（驗收）：

關閉網路（飛航模式），雙擊 app.html 可完成：新增 1 筆項目、關閉重開後項目仍在、匯出 JSON、清空、匯入後還原成功。

Lighthouse（本機）基本可用性達標（不含 PWA 指標）。
執行模式：以 file:// 直接雙擊開啟為主，不使用 Service Worker/PWA；所有資源（CSS/JS/圖示）皆內嵌同一檔。

資料層：IndexedDB（優先）+ localStorage（回退）。IndexedDB 可支援大量資料與二進位附件（Blob）。若瀏覽器不支援或權限受限，降級為 localStorage（文字資料為主，附件停用並給出提示）。

模型與版本控管：

items：{id, title, content, tags[], createdAt, updatedAt, attachmentIds[]}

versions：按 itemId 保存快照 {versionId, itemId, title, content, tags, createdAt, createdBy, createdAtTS}，每次儲存建立一版，可「回滾到此版本」或「刪除此版本」。

attachments：儲存 Blob 與中繼資料 {attachmentId, itemId, name, type, size, blob}。

trash：軟刪除的 items 與其版本（保留附件引用），可還原或永久清除（清除時連帶刪除其版本與附件）。


匯出/匯入：

產出單一 .json（含 items、versions、trash、attachmentsMeta）。提供選項：是否內嵌附件（Base64）。若不內嵌，僅輸出附件中繼資料。

匯入：支援覆蓋/合併兩種模式；提供試算（先顯示預計新增/覆蓋/丟棄數量）後再執行。


UI/UX（「呼吸感」與列印友善）：

系統字型堆疊、基本字級 16px、行高 1.6、間距以 8px 系列。

雙欄：左側清單 + 右側編輯；頂部工具列。

快捷鍵：N 新增、S 儲存、Del 移至回收桶、/ 搜尋。

@media print：列印僅輸出右側「詳情視圖」的乾淨版面（自動隱藏工具列與清單）。


相容性：

目標：Chromium/Firefox/Safari（近兩年）；Edge 舊版盡量相容（若 IndexedDB 受限自動降級）。


歷史與回滾/刪除：

每個項目的「版本時間軸」面板，可回滾（以該版本覆蓋現行草稿）與刪除版本。

全域「回收桶」檢視：可還原或永久刪除（含相關版本與附件）。


性能與容量：

清單虛擬化（簡易分頁/漸進載入）。

版本與活動日誌可選擇性壓縮/裁剪（例如保留近 N 版；預設 50 版/項上限，可在設定中調整）。


安全/隱私：無外呼、無追蹤、無 eval。檔案操作一律走使用者手動選檔/下載。


交付物：

app.html（單一檔，全部內嵌）

README-使用說明與測試清單（純文字內容隨附於本回覆，亦可於應用內「說明」對話框檢視）


/speckit.analyze 一致性檢查（含新增需求）：

本地留存/刪除/回滾/歷史可刪：以 versions 與 trash 模型實現；提供回滾與版本刪除；回收桶永久刪除聯動清理附件，符合需求。

大資料量與二進位附件：IndexedDB 能處理大量記錄與 Blob；在 file:// 下於主流瀏覽器可用。若降級 localStorage，將禁用附件並提示限制，確保可用性。

列印友善 + 呼吸感：以排版與 @media print 支援；列表隱藏、保留詳細內容與標題、欄位。

不加密：匯出/匯入不含加密；README 提醒使用者資料保護責任。 風險與緩解：

瀏覽器差異：提供啟動自檢面板（顯示：協定/DB後端/附件可用性）。

超大附件匯出：Base64 會膨脹 33%；提供「不內嵌附件」選項並提示檔案體積。

版本無上限：預設上限 50 版/項，可在「設定」中調整；達上限時自動採用「先入先出」清理策略。